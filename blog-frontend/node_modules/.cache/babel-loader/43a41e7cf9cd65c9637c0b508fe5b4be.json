{"ast":null,"code":"import _slicedToArray from \"/home/h/workspace/blog/blog-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/h/workspace/blog/blog-frontend/src/containers/auth/LoginForm.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { changeField, initializeForm, login } from '../../modules/auth';\nimport AuthForm from '../../components/auth/AuthForm';\nimport { check } from '../../modules/user';\n\nconst LoginForm = ({\n  history\n}) => {\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        error = _useState2[0],\n        setError = _useState2[1];\n\n  const dispatch = useDispatch();\n\n  const _useSelector = useSelector(({\n    auth,\n    user\n  }) => ({\n    form: auth.login,\n    auth: auth.auth,\n    authError: auth.authError,\n    user: user.user\n  })),\n        form = _useSelector.form,\n        auth = _useSelector.auth,\n        authError = _useSelector.authError,\n        user = _useSelector.user; // 인풋 변경 이벤트 핸들러\n\n\n  const onChange = e => {\n    const _e$target = e.target,\n          value = _e$target.value,\n          name = _e$target.name;\n    dispatch(changeField({\n      form: 'login',\n      key: name,\n      value\n    }));\n  }; // 폼 등록 이벤트 핸들러\n\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const username = form.username,\n          password = form.password;\n    dispatch(login({\n      username,\n      password\n    }));\n  }; // 컴포넌트가 처음 렌더링 될 때 form 을 초기화\n\n\n  useEffect(() => {\n    dispatch(initializeForm('login'));\n  }, [dispatch]);\n  useEffect(() => {\n    if (authError) {\n      setError('등록되지 않은 아이디거나 비밀번호가 다릅니다.');\n      return;\n    }\n\n    if (auth) {\n      dispatch(check());\n    }\n  }, [auth, authError, dispatch]);\n  useEffect(() => {\n    if (user) {\n      history.push('/');\n\n      try {\n        localStorage.setItem('user', JSON.stringify(user));\n      } catch (e) {\n        console.log('localStorage is not working');\n      }\n    }\n  }, [history, user]);\n  return React.createElement(AuthForm, {\n    type: \"login\",\n    form: form,\n    onChange: onChange,\n    onSubmit: onSubmit,\n    error: error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  });\n};\n\nexport default withRouter(LoginForm);","map":{"version":3,"sources":["/home/h/workspace/blog/blog-frontend/src/containers/auth/LoginForm.js"],"names":["React","useEffect","useState","useSelector","useDispatch","withRouter","changeField","initializeForm","login","AuthForm","check","LoginForm","history","error","setError","dispatch","auth","user","form","authError","onChange","e","target","value","name","key","onSubmit","preventDefault","username","password","push","localStorage","setItem","JSON","stringify","console","log"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {withRouter} from 'react-router-dom';\nimport {changeField, initializeForm, login} from '../../modules/auth';\nimport AuthForm from '../../components/auth/AuthForm';\nimport {check} from '../../modules/user';\n\nconst LoginForm = ({history}) => {\n    const [error, setError] = useState(null);\n    const dispatch = useDispatch();\n    const {form, auth, authError, user} = useSelector(({auth, user}) => ({\n        form: auth.login,\n        auth: auth.auth,\n        authError: auth.authError,\n        user: user.user,\n    }));\n    // 인풋 변경 이벤트 핸들러\n    const onChange = e => {\n        const {value, name} = e.target;\n        dispatch(\n            changeField({\n                form: 'login',\n                key: name,\n                value,\n            }),\n        );\n    };\n\n    // 폼 등록 이벤트 핸들러\n    const onSubmit = e => {\n        e.preventDefault();\n        const {username, password} = form;\n        dispatch(login({username, password}));\n    };\n\n    // 컴포넌트가 처음 렌더링 될 때 form 을 초기화\n    useEffect(() => {\n        dispatch(initializeForm('login'));\n    }, [dispatch]);\n\n    useEffect(() => {\n        if (authError) {\n            setError('등록되지 않은 아이디거나 비밀번호가 다릅니다.');\n            return;\n        }\n        if (auth) {\n            dispatch(check());\n        }\n    }, [auth, authError, dispatch]);\n\n    useEffect(() => {\n        if (user) {\n            history.push('/');\n            try {\n                localStorage.setItem('user', JSON.stringify(user));\n            } catch (e) {\n                console.log('localStorage is not working');\n            }\n        }\n    }, [history, user]);\n\n    return (\n        <AuthForm type=\"login\" form={form} onChange={onChange} onSubmit={onSubmit} error={error}/>\n    );\n};\n\nexport default withRouter(LoginForm);"]},"metadata":{},"sourceType":"module"}