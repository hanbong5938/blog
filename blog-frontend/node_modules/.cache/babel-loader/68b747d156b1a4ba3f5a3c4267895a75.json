{"ast":null,"code":"import _defineProperty from \"/home/h/workspace/blog/blog-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/h/workspace/blog/blog-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { createAction, handleActions } from 'redux-actions';\nimport { takeLatest } from 'redux-saga/effects';\nimport * as authAPI from '../lib/api/auth';\nimport createRequestSaga, { createRequestActionTypes } from \"../lib/createRequetSaga\"; //새로고침 이후 임시 로그인 처리\n\nconst TEMP_SET_USER = 'user/TEMP_SET_USER'; //회원 정보 확인\n\nconst _createRequestActionT = createRequestActionTypes('user/CHECK'),\n      _createRequestActionT2 = _slicedToArray(_createRequestActionT, 3),\n      CHECK = _createRequestActionT2[0],\n      CHECK_SUCCESS = _createRequestActionT2[1],\n      CHECK_FAILURE = _createRequestActionT2[2];\n\nexport const tempSetUser = createAction(TEMP_SET_USER, user => user);\nexport const check = createAction(CHECK);\nconst checkSaga = createRequestSaga(CHECK, authAPI.check);\nexport function* userSaga() {\n  yield takeLatest(CHECK, checkSaga);\n}\nconst initialState = {\n  user: null,\n  checkError: null\n};\nexport default handleActions({\n  [TEMP_SET_USER]: (state, {\n    payload: user\n  }) => _objectSpread({}, state, {\n    user\n  }),\n  [CHECK_SUCCESS]: (state, {\n    payload: user\n  }) => _objectSpread({}, state, {\n    user,\n    checkError: null\n  }),\n  [CHECK_FAILURE]: (state, {\n    payload: error\n  }) => _objectSpread({}, state, {\n    user: null,\n    checkError: error\n  }),\n  initialState\n});","map":{"version":3,"sources":["/home/h/workspace/blog/blog-frontend/src/modules/user.js"],"names":["createAction","handleActions","takeLatest","authAPI","createRequestSaga","createRequestActionTypes","TEMP_SET_USER","CHECK","CHECK_SUCCESS","CHECK_FAILURE","tempSetUser","user","check","checkSaga","userSaga","initialState","checkError","state","payload","error"],"mappings":";;;;;;;AAAA,SAAQA,YAAR,EAAsBC,aAAtB,QAA0C,eAA1C;AACA,SAAQC,UAAR,QAAyB,oBAAzB;AACA,OAAO,KAAKC,OAAZ,MAAyB,iBAAzB;AACA,OAAOC,iBAAP,IAA2BC,wBAA3B,QAA0D,yBAA1D,C,CAEA;;AACA,MAAMC,aAAa,GAAG,oBAAtB,C,CACA;;8BAC8CD,wBAAwB,CAClE,YADkE,C;;MAA/DE,K;MAAOC,a;MAAeC,a;;AAI7B,OAAO,MAAMC,WAAW,GAAGV,YAAY,CAACM,aAAD,EAAgBK,IAAI,IAAIA,IAAxB,CAAhC;AACP,OAAO,MAAMC,KAAK,GAAGZ,YAAY,CAACO,KAAD,CAA1B;AAEP,MAAMM,SAAS,GAAGT,iBAAiB,CAACG,KAAD,EAAQJ,OAAO,CAACS,KAAhB,CAAnC;AAEA,OAAO,UAAUE,QAAV,GAAqB;AACxB,QAAMZ,UAAU,CAACK,KAAD,EAAQM,SAAR,CAAhB;AACH;AAED,MAAME,YAAY,GAAG;AACjBJ,EAAAA,IAAI,EAAE,IADW;AAEjBK,EAAAA,UAAU,EAAE;AAFK,CAArB;AAKA,eAAef,aAAa,CAAC;AACzB,GAACK,aAAD,GAAiB,CAACW,KAAD,EAAQ;AAACC,IAAAA,OAAO,EAAEP;AAAV,GAAR,uBACVM,KADU;AAEbN,IAAAA;AAFa,IADQ;AAKzB,GAACH,aAAD,GAAiB,CAACS,KAAD,EAAQ;AAACC,IAAAA,OAAO,EAAEP;AAAV,GAAR,uBACVM,KADU;AAEbN,IAAAA,IAFa;AAGbK,IAAAA,UAAU,EAAE;AAHC,IALQ;AAUzB,GAACP,aAAD,GAAiB,CAACQ,KAAD,EAAQ;AAACC,IAAAA,OAAO,EAAEC;AAAV,GAAR,uBACVF,KADU;AAEbN,IAAAA,IAAI,EAAE,IAFO;AAGbK,IAAAA,UAAU,EAAEG;AAHC,IAVQ;AAezBJ,EAAAA;AAfyB,CAAD,CAA5B","sourcesContent":["import {createAction, handleActions} from 'redux-actions';\nimport {takeLatest} from 'redux-saga/effects';\nimport * as authAPI from '../lib/api/auth';\nimport createRequestSaga, {createRequestActionTypes} from \"../lib/createRequetSaga\";\n\n//새로고침 이후 임시 로그인 처리\nconst TEMP_SET_USER = 'user/TEMP_SET_USER';\n//회원 정보 확인\nconst [CHECK, CHECK_SUCCESS, CHECK_FAILURE] = createRequestActionTypes(\n    'user/CHECK',\n);\n\nexport const tempSetUser = createAction(TEMP_SET_USER, user => user);\nexport const check = createAction(CHECK);\n\nconst checkSaga = createRequestSaga(CHECK, authAPI.check);\n\nexport function* userSaga() {\n    yield takeLatest(CHECK, checkSaga);\n}\n\nconst initialState = {\n    user: null,\n    checkError: null,\n};\n\nexport default handleActions({\n    [TEMP_SET_USER]: (state, {payload: user}) => ({\n        ...state,\n        user,\n    }),\n    [CHECK_SUCCESS]: (state, {payload: user}) => ({\n        ...state,\n        user,\n        checkError: null,\n    }),\n    [CHECK_FAILURE]: (state, {payload: error}) => ({\n        ...state,\n        user: null,\n        checkError: error,\n    }),\n    initialState,\n});"]},"metadata":{},"sourceType":"module"}