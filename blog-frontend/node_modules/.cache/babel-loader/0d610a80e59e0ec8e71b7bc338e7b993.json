{"ast":null,"code":"import { call, put } from 'redux-saga/effects';\nimport { startLoading, finishLoading } from \"../modules/loading\";\nexport const createRequestActionTypes = type => {\n  const SUCCESS = \"\".concat(type, \"_SUCCESS\");\n  const FAILURE = \"\".concat(type, \"_FAILURE\");\n  return [type, SUCCESS, FAILURE];\n};\nexport default function createRequestSaga(type, request) {\n  const SUCCESS = \"\".concat(type, \"_SUCCESS\");\n  const FAILURE = \"\".concat(type, \"_FAILURE\");\n  return function* (action) {\n    //로딩 시작\n    yield put(startLoading(type));\n\n    try {\n      const response = yield call(request, action.payload);\n      yield put({\n        type: SUCCESS,\n        payload: response.data\n      });\n    } catch (e) {\n      yield put({\n        type: FAILURE,\n        payload: e,\n        error: true\n      });\n    } //로딩 끝\n\n\n    yield put(finishLoading(type));\n  };\n}","map":{"version":3,"sources":["/home/h/workspace/blog/blog-frontend/src/lib/createRequetSaga.js"],"names":["call","put","startLoading","finishLoading","createRequestActionTypes","type","SUCCESS","FAILURE","createRequestSaga","request","action","response","payload","data","e","error"],"mappings":"AAAA,SAAQA,IAAR,EAAcC,GAAd,QAAwB,oBAAxB;AACA,SAAQC,YAAR,EAAsBC,aAAtB,QAA0C,oBAA1C;AAEA,OAAO,MAAMC,wBAAwB,GAAGC,IAAI,IAAI;AAC5C,QAAMC,OAAO,aAAMD,IAAN,aAAb;AACA,QAAME,OAAO,aAAMF,IAAN,aAAb;AACA,SAAO,CAACA,IAAD,EAAOC,OAAP,EAAgBC,OAAhB,CAAP;AACH,CAJM;AAMP,eAAe,SAASC,iBAAT,CAA2BH,IAA3B,EAAiCI,OAAjC,EAA0C;AACrD,QAAMH,OAAO,aAAMD,IAAN,aAAb;AACA,QAAME,OAAO,aAAMF,IAAN,aAAb;AAEA,SAAO,WAAWK,MAAX,EAAmB;AACtB;AACA,UAAMT,GAAG,CAACC,YAAY,CAACG,IAAD,CAAb,CAAT;;AACA,QAAI;AACA,YAAMM,QAAQ,GAAG,MAAMX,IAAI,CAACS,OAAD,EAAUC,MAAM,CAACE,OAAjB,CAA3B;AACA,YAAMX,GAAG,CAAC;AACNI,QAAAA,IAAI,EAAEC,OADA;AAENM,QAAAA,OAAO,EAAED,QAAQ,CAACE;AAFZ,OAAD,CAAT;AAIH,KAND,CAME,OAAOC,CAAP,EAAU;AACR,YAAMb,GAAG,CAAC;AACNI,QAAAA,IAAI,EAAEE,OADA;AAENK,QAAAA,OAAO,EAAEE,CAFH;AAGNC,QAAAA,KAAK,EAAE;AAHD,OAAD,CAAT;AAKH,KAfqB,CAgBtB;;;AACA,UAAMd,GAAG,CAACE,aAAa,CAACE,IAAD,CAAd,CAAT;AACH,GAlBD;AAmBH","sourcesContent":["import {call, put} from 'redux-saga/effects';\nimport {startLoading, finishLoading} from \"../modules/loading\";\n\nexport const createRequestActionTypes = type => {\n    const SUCCESS = `${type}_SUCCESS`;\n    const FAILURE = `${type}_FAILURE`;\n    return [type, SUCCESS, FAILURE]\n};\n\nexport default function createRequestSaga(type, request) {\n    const SUCCESS = `${type}_SUCCESS`;\n    const FAILURE = `${type}_FAILURE`;\n\n    return function* (action) {\n        //로딩 시작\n        yield put(startLoading(type));\n        try {\n            const response = yield call(request, action.payload);\n            yield put({\n                type: SUCCESS,\n                payload: response.data,\n            });\n        } catch (e) {\n            yield put({\n                type: FAILURE,\n                payload: e,\n                error: true,\n            });\n        }\n        //로딩 끝\n        yield put(finishLoading(type));\n    };\n}"]},"metadata":{},"sourceType":"module"}