{"ast":null,"code":"import _defineProperty from \"/home/h/workspace/blog/blog-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { createAction, handleActions } from 'redux-actions';\nconst START_LOADING = 'loading/START_LOADING';\nconst FINISH_LOADING = 'loading/FINISH_LOADING'; //요청을 위한 액션 타입을 payload로 설정\n\nexport const startLoading = createAction(START_LOADING, requestType => requestType);\nexport const finishLoading = createAction(FINISH_LOADING, requestType => requestType);\nconst initialState = {};\nconst loading = handleActions({\n  [START_LOADING]: (state, action) => _objectSpread({}, state, {\n    [action.payload]: true\n  }),\n  [FINISH_LOADING]: (state, action) => _objectSpread({}, state, {\n    [action.payload]: false\n  })\n}, initialState);\nexport default loading;","map":{"version":3,"sources":["/home/h/workspace/blog/blog-frontend/src/modules/loading.js"],"names":["createAction","handleActions","START_LOADING","FINISH_LOADING","startLoading","requestType","finishLoading","initialState","loading","state","action","payload"],"mappings":";;;;;;AAAA,SAAQA,YAAR,EAAsBC,aAAtB,QAA0C,eAA1C;AAEA,MAAMC,aAAa,GAAG,uBAAtB;AACA,MAAMC,cAAc,GAAG,wBAAvB,C,CAEA;;AAEA,OAAO,MAAMC,YAAY,GAAGJ,YAAY,CACpCE,aADoC,EAEpCG,WAAW,IAAIA,WAFqB,CAAjC;AAKP,OAAO,MAAMC,aAAa,GAAGN,YAAY,CACrCG,cADqC,EAErCE,WAAW,IAAIA,WAFsB,CAAlC;AAKP,MAAME,YAAY,GAAG,EAArB;AAEA,MAAMC,OAAO,GAAGP,aAAa,CAAC;AACtB,GAACC,aAAD,GAAiB,CAACO,KAAD,EAAQC,MAAR,uBACVD,KADU;AAEb,KAACC,MAAM,CAACC,OAAR,GAAkB;AAFL,IADK;AAKtB,GAACR,cAAD,GAAkB,CAACM,KAAD,EAAQC,MAAR,uBACXD,KADW;AAEd,KAACC,MAAM,CAACC,OAAR,GAAkB;AAFJ;AALI,CAAD,EAStBJ,YATsB,CAA7B;AAYA,eAAeC,OAAf","sourcesContent":["import {createAction, handleActions} from 'redux-actions';\n\nconst START_LOADING = 'loading/START_LOADING';\nconst FINISH_LOADING = 'loading/FINISH_LOADING';\n\n//요청을 위한 액션 타입을 payload로 설정\n\nexport const startLoading = createAction(\n    START_LOADING,\n    requestType => requestType,\n);\n\nexport const finishLoading = createAction(\n    FINISH_LOADING,\n    requestType => requestType,\n);\n\nconst initialState = {};\n\nconst loading = handleActions({\n        [START_LOADING]: (state, action) => ({\n            ...state,\n            [action.payload]: true,\n        }),\n        [FINISH_LOADING]: (state, action) => ({\n            ...state,\n            [action.payload]: false,\n        }),\n    }, initialState\n);\n\nexport default loading;"]},"metadata":{},"sourceType":"module"}