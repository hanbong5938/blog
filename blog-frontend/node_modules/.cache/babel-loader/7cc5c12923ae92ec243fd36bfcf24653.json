{"ast":null,"code":"var _jsxFileName = \"/home/h/workspace/blog/blog-frontend/src/containers/post/PostViewerContainer.js\";\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { readPost, unloadPost } from '../../modules/post';\nimport PostViewer from '../../components/post/PostViewer';\n\nconst PostViewerContainer = ({\n  match\n}) => {\n  // 처음 마운트될 때 포스트 읽기 API 요청정\n  const postId = match.params.postId;\n  const dispatch = useDispatch();\n\n  const _useSelector = useSelector(({\n    post,\n    loading\n  }) => ({\n    post: post.post,\n    error: post.error,\n    loading: loading['post/READ_POST']\n  })),\n        post = _useSelector.post,\n        error = _useSelector.error,\n        loading = _useSelector.loading;\n\n  useEffect(() => {\n    dispatch(readPost(postId)); // 언마운트될 때 리덕스에서 데이터 제\n\n    return () => {\n      dispatch(unloadPost());\n    };\n  }, [dispatch, postId]);\n  return React.createElement(PostViewer, {\n    post: post,\n    loading: loading,\n    error: error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  });\n};\n\nexport default withRouter(PostViewerContainer);","map":{"version":3,"sources":["/home/h/workspace/blog/blog-frontend/src/containers/post/PostViewerContainer.js"],"names":["React","useEffect","useDispatch","useSelector","withRouter","readPost","unloadPost","PostViewer","PostViewerContainer","match","postId","params","dispatch","post","loading","error"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,oBAArC;AACA,OAAOC,UAAP,MAAuB,kCAAvB;;AAEA,MAAMC,mBAAmB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AACzC;AADyC,QAEjCC,MAFiC,GAEtBD,KAAK,CAACE,MAFgB,CAEjCD,MAFiC;AAGzC,QAAME,QAAQ,GAAGV,WAAW,EAA5B;;AAHyC,uBAIRC,WAAW,CAAC,CAAC;AAAEU,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAD,MAAwB;AACnED,IAAAA,IAAI,EAAEA,IAAI,CAACA,IADwD;AAEnEE,IAAAA,KAAK,EAAEF,IAAI,CAACE,KAFuD;AAGnED,IAAAA,OAAO,EAAEA,OAAO,CAAC,gBAAD;AAHmD,GAAxB,CAAD,CAJH;AAAA,QAIjCD,IAJiC,gBAIjCA,IAJiC;AAAA,QAI3BE,KAJ2B,gBAI3BA,KAJ2B;AAAA,QAIpBD,OAJoB,gBAIpBA,OAJoB;;AAUzCb,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,QAAQ,CAACP,QAAQ,CAACK,MAAD,CAAT,CAAR,CADc,CAEd;;AACA,WAAO,MAAM;AACXE,MAAAA,QAAQ,CAACN,UAAU,EAAX,CAAR;AACD,KAFD;AAGD,GANQ,EAMN,CAACM,QAAD,EAAWF,MAAX,CANM,CAAT;AAQA,SAAO,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAEG,IAAlB;AAAwB,IAAA,OAAO,EAAEC,OAAjC;AAA0C,IAAA,KAAK,EAAEC,KAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CAnBD;;AAqBA,eAAeX,UAAU,CAACI,mBAAD,CAAzB","sourcesContent":["import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { readPost, unloadPost } from '../../modules/post';\nimport PostViewer from '../../components/post/PostViewer';\n\nconst PostViewerContainer = ({ match }) => {\n  // 처음 마운트될 때 포스트 읽기 API 요청정\n  const { postId } = match.params;\n  const dispatch = useDispatch();\n  const { post, error, loading } = useSelector(({ post, loading }) => ({\n    post: post.post,\n    error: post.error,\n    loading: loading['post/READ_POST'],\n  }));\n\n  useEffect(() => {\n    dispatch(readPost(postId));\n    // 언마운트될 때 리덕스에서 데이터 제\n    return () => {\n      dispatch(unloadPost());\n    };\n  }, [dispatch, postId]);\n\n  return <PostViewer post={post} loading={loading} error={error} />;\n};\n\nexport default withRouter(PostViewerContainer);\n"]},"metadata":{},"sourceType":"module"}