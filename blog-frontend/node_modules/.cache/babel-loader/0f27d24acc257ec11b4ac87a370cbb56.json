{"ast":null,"code":"import _defineProperty from \"/home/h/workspace/blog/blog-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/h/workspace/blog/blog-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { createAction, handleActions } from 'redux-actions';\nimport createRequestSaga, { createRequestActionTypes } from '../lib/createRequestSaga';\nimport * as postsAPI from '../lib/api/posts';\nimport { takeLatest } from 'redux-saga/effects';\n\nconst _createRequestActionT = createRequestActionTypes('post/READ_POST'),\n      _createRequestActionT2 = _slicedToArray(_createRequestActionT, 3),\n      READ_POST = _createRequestActionT2[0],\n      READ_POST_SUCCESS = _createRequestActionT2[1],\n      READ_POST_FAILURE = _createRequestActionT2[2]; // 포스트 페이지에서 벗어날 때 데이터 비우기\n\n\nconst UNLOAD_POST = 'post/UNLOAD_POST';\nexport const readPost = createAction(READ_POST, id => id);\nexport const unloadPost = createAction(UNLOAD_POST);\nconst readPostSaga = createRequestSaga(READ_POST, postsAPI.readPost);\nexport function* postSaga() {\n  yield takeLatest(READ_POST, readPostSaga);\n}\nconst initialState = {\n  post: null,\n  error: null\n};\nconst post = handleActions({\n  [READ_POST_SUCCESS]: (state, {\n    payload: post\n  }) => _objectSpread({}, state, {\n    post\n  }),\n  [READ_POST_FAILURE]: (state, {\n    payload: error\n  }) => _objectSpread({}, state, {\n    error\n  }),\n  [UNLOAD_POST]: () => initialState\n}, initialState);\nexport default post;","map":{"version":3,"sources":["/home/h/workspace/blog/blog-frontend/src/modules/post.js"],"names":["createAction","handleActions","createRequestSaga","createRequestActionTypes","postsAPI","takeLatest","READ_POST","READ_POST_SUCCESS","READ_POST_FAILURE","UNLOAD_POST","readPost","id","unloadPost","readPostSaga","postSaga","initialState","post","error","state","payload"],"mappings":";;;;;;;AAAA,SAASA,YAAT,EAAuBC,aAAvB,QAA4C,eAA5C;AACA,OAAOC,iBAAP,IACIC,wBADJ,QAEO,0BAFP;AAGA,OAAO,KAAKC,QAAZ,MAA0B,kBAA1B;AACA,SAASC,UAAT,QAA2B,oBAA3B;;8BAMIF,wBAAwB,CAAC,gBAAD,C;;MAHxBG,S;MACAC,iB;MACAC,iB,8BAGJ;;;AACA,MAAMC,WAAW,GAAG,kBAApB;AAEA,OAAO,MAAMC,QAAQ,GAAGV,YAAY,CAACM,SAAD,EAAYK,EAAE,IAAIA,EAAlB,CAA7B;AACP,OAAO,MAAMC,UAAU,GAAGZ,YAAY,CAACS,WAAD,CAA/B;AAEP,MAAMI,YAAY,GAAGX,iBAAiB,CAACI,SAAD,EAAYF,QAAQ,CAACM,QAArB,CAAtC;AACA,OAAO,UAAUI,QAAV,GAAqB;AACxB,QAAMT,UAAU,CAACC,SAAD,EAAYO,YAAZ,CAAhB;AACH;AAED,MAAME,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE,IADW;AAEjBC,EAAAA,KAAK,EAAE;AAFU,CAArB;AAKA,MAAMD,IAAI,GAAGf,aAAa,CACtB;AACI,GAACM,iBAAD,GAAqB,CAACW,KAAD,EAAQ;AAAEC,IAAAA,OAAO,EAAEH;AAAX,GAAR,uBACdE,KADc;AAEjBF,IAAAA;AAFiB,IADzB;AAKI,GAACR,iBAAD,GAAqB,CAACU,KAAD,EAAQ;AAAEC,IAAAA,OAAO,EAAEF;AAAX,GAAR,uBACdC,KADc;AAEjBD,IAAAA;AAFiB,IALzB;AASI,GAACR,WAAD,GAAe,MAAMM;AATzB,CADsB,EAYtBA,YAZsB,CAA1B;AAeA,eAAeC,IAAf","sourcesContent":["import { createAction, handleActions } from 'redux-actions';\nimport createRequestSaga, {\n    createRequestActionTypes,\n} from '../lib/createRequestSaga';\nimport * as postsAPI from '../lib/api/posts';\nimport { takeLatest } from 'redux-saga/effects';\n\nconst [\n    READ_POST,\n    READ_POST_SUCCESS,\n    READ_POST_FAILURE,\n] = createRequestActionTypes('post/READ_POST');\n\n// 포스트 페이지에서 벗어날 때 데이터 비우기\nconst UNLOAD_POST = 'post/UNLOAD_POST';\n\nexport const readPost = createAction(READ_POST, id => id);\nexport const unloadPost = createAction(UNLOAD_POST);\n\nconst readPostSaga = createRequestSaga(READ_POST, postsAPI.readPost);\nexport function* postSaga() {\n    yield takeLatest(READ_POST, readPostSaga);\n}\n\nconst initialState = {\n    post: null,\n    error: null,\n};\n\nconst post = handleActions(\n    {\n        [READ_POST_SUCCESS]: (state, { payload: post }) => ({\n            ...state,\n            post,\n        }),\n        [READ_POST_FAILURE]: (state, { payload: error }) => ({\n            ...state,\n            error,\n        }),\n        [UNLOAD_POST]: () => initialState,\n    },\n    initialState,\n);\n\nexport default post;"]},"metadata":{},"sourceType":"module"}