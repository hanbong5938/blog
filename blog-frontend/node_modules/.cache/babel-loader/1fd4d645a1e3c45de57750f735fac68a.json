{"ast":null,"code":"import _defineProperty from \"/home/h/workspace/blog/blog-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/h/workspace/blog/blog-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { createAction, handleActions } from 'redux-actions';\nimport { takeLatest } from 'redux-saga/effects';\nimport * as authAPI from '../lib/api/auth';\nimport createRequestSaga, { createRequestActionTypes } from '../lib/createRequestSaga'; //새로고침 이후 임시 로그인 처리\n\nconst TEMP_SET_USER = 'user/TEMP_SET_USER'; //회원 정보 확인\n\nconst _createRequestActionT = createRequestActionTypes('user/CHECK'),\n      _createRequestActionT2 = _slicedToArray(_createRequestActionT, 3),\n      CHECK = _createRequestActionT2[0],\n      CHECK_SUCCESS = _createRequestActionT2[1],\n      CHECK_FAILURE = _createRequestActionT2[2];\n\nconst LOGOUT = 'user/LOGOUT';\nexport const tempSetUser = createAction(TEMP_SET_USER, user => user);\nexport const check = createAction(CHECK);\nexport const logout = createAction(LOGOUT);\nconst checkSaga = createRequestSaga(CHECK, authAPI.check);\n\nfunction checkFailureSaga() {\n  try {\n    localStorage.removeItem('user');\n  } catch (e) {\n    console.log('localStorage is not working.');\n  }\n}\n\nfunction* logoutSaga() {\n  try {\n    yield call(authAPI.logout);\n    localStorage.removeItem('user');\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nexport function* userSaga() {\n  yield takeLatest(CHECK, checkSaga);\n  yield takeLatest(CHECK_FAILURE, checkFailureSaga);\n  yield takeLatest(LOGOUT, logoutSaga);\n}\nconst initialState = {\n  user: null,\n  checkError: null\n};\nexport default handleActions({\n  [TEMP_SET_USER]: (state, {\n    payload: user\n  }) => _objectSpread({}, state, {\n    user\n  }),\n  [CHECK_SUCCESS]: (state, {\n    payload: user\n  }) => _objectSpread({}, state, {\n    user,\n    checkError: null\n  }),\n  [CHECK_FAILURE]: (state, {\n    payload: error\n  }) => _objectSpread({}, state, {\n    user: null,\n    checkError: error\n  })\n}, initialState);","map":{"version":3,"sources":["/home/h/workspace/blog/blog-frontend/src/modules/user.js"],"names":["createAction","handleActions","takeLatest","authAPI","createRequestSaga","createRequestActionTypes","TEMP_SET_USER","CHECK","CHECK_SUCCESS","CHECK_FAILURE","LOGOUT","tempSetUser","user","check","logout","checkSaga","checkFailureSaga","localStorage","removeItem","e","console","log","logoutSaga","call","userSaga","initialState","checkError","state","payload","error"],"mappings":";;;;;;;AAAA,SAAQA,YAAR,EAAsBC,aAAtB,QAA0C,eAA1C;AACA,SAAQC,UAAR,QAAyB,oBAAzB;AACA,OAAO,KAAKC,OAAZ,MAAyB,iBAAzB;AACA,OAAOC,iBAAP,IAA2BC,wBAA3B,QAA0D,0BAA1D,C,CAEA;;AACA,MAAMC,aAAa,GAAG,oBAAtB,C,CACA;;8BAC8CD,wBAAwB,CAClE,YADkE,C;;MAA/DE,K;MAAOC,a;MAAeC,a;;AAI7B,MAAMC,MAAM,GAAG,aAAf;AAEA,OAAO,MAAMC,WAAW,GAAGX,YAAY,CAACM,aAAD,EAAgBM,IAAI,IAAIA,IAAxB,CAAhC;AACP,OAAO,MAAMC,KAAK,GAAGb,YAAY,CAACO,KAAD,CAA1B;AACP,OAAO,MAAMO,MAAM,GAAGd,YAAY,CAACU,MAAD,CAA3B;AAEP,MAAMK,SAAS,GAAGX,iBAAiB,CAACG,KAAD,EAAQJ,OAAO,CAACU,KAAhB,CAAnC;;AAEA,SAASG,gBAAT,GAA4B;AACxB,MAAI;AACAC,IAAAA,YAAY,CAACC,UAAb,CAAwB,MAAxB;AACH,GAFD,CAEE,OAAOC,CAAP,EAAU;AACRC,IAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACH;AACJ;;AAED,UAAUC,UAAV,GAAuB;AACnB,MAAI;AACA,UAAMC,IAAI,CAACpB,OAAO,CAACW,MAAT,CAAV;AACAG,IAAAA,YAAY,CAACC,UAAb,CAAwB,MAAxB;AACH,GAHD,CAGE,OAAOC,CAAP,EAAU;AACRC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACH;AACJ;;AAED,OAAO,UAAUK,QAAV,GAAqB;AACxB,QAAMtB,UAAU,CAACK,KAAD,EAAQQ,SAAR,CAAhB;AACA,QAAMb,UAAU,CAACO,aAAD,EAAgBO,gBAAhB,CAAhB;AACA,QAAMd,UAAU,CAACQ,MAAD,EAASY,UAAT,CAAhB;AACH;AAED,MAAMG,YAAY,GAAG;AACjBb,EAAAA,IAAI,EAAE,IADW;AAEjBc,EAAAA,UAAU,EAAE;AAFK,CAArB;AAKA,eAAezB,aAAa,CACxB;AACI,GAACK,aAAD,GAAiB,CAACqB,KAAD,EAAQ;AAACC,IAAAA,OAAO,EAAEhB;AAAV,GAAR,uBACVe,KADU;AAEbf,IAAAA;AAFa,IADrB;AAKI,GAACJ,aAAD,GAAiB,CAACmB,KAAD,EAAQ;AAACC,IAAAA,OAAO,EAAEhB;AAAV,GAAR,uBACVe,KADU;AAEbf,IAAAA,IAFa;AAGbc,IAAAA,UAAU,EAAE;AAHC,IALrB;AAUI,GAACjB,aAAD,GAAiB,CAACkB,KAAD,EAAQ;AAACC,IAAAA,OAAO,EAAEC;AAAV,GAAR,uBACVF,KADU;AAEbf,IAAAA,IAAI,EAAE,IAFO;AAGbc,IAAAA,UAAU,EAAEG;AAHC;AAVrB,CADwB,EAiBxBJ,YAjBwB,CAA5B","sourcesContent":["import {createAction, handleActions} from 'redux-actions';\nimport {takeLatest} from 'redux-saga/effects';\nimport * as authAPI from '../lib/api/auth';\nimport createRequestSaga, {createRequestActionTypes} from '../lib/createRequestSaga';\n\n//새로고침 이후 임시 로그인 처리\nconst TEMP_SET_USER = 'user/TEMP_SET_USER';\n//회원 정보 확인\nconst [CHECK, CHECK_SUCCESS, CHECK_FAILURE] = createRequestActionTypes(\n    'user/CHECK',\n);\n\nconst LOGOUT = 'user/LOGOUT';\n\nexport const tempSetUser = createAction(TEMP_SET_USER, user => user);\nexport const check = createAction(CHECK);\nexport const logout = createAction(LOGOUT);\n\nconst checkSaga = createRequestSaga(CHECK, authAPI.check);\n\nfunction checkFailureSaga() {\n    try {\n        localStorage.removeItem('user')\n    } catch (e) {\n        console.log('localStorage is not working.');\n    }\n}\n\nfunction* logoutSaga() {\n    try {\n        yield call(authAPI.logout);\n        localStorage.removeItem('user');\n    } catch (e) {\n        console.log(e);\n    }\n}\n\nexport function* userSaga() {\n    yield takeLatest(CHECK, checkSaga);\n    yield takeLatest(CHECK_FAILURE, checkFailureSaga);\n    yield takeLatest(LOGOUT, logoutSaga);\n}\n\nconst initialState = {\n    user: null,\n    checkError: null,\n};\n\nexport default handleActions(\n    {\n        [TEMP_SET_USER]: (state, {payload: user}) => ({\n            ...state,\n            user,\n        }),\n        [CHECK_SUCCESS]: (state, {payload: user}) => ({\n            ...state,\n            user,\n            checkError: null,\n        }),\n        [CHECK_FAILURE]: (state, {payload: error}) => ({\n            ...state,\n            user: null,\n            checkError: error,\n        })\n    },\n    initialState,\n);"]},"metadata":{},"sourceType":"module"}