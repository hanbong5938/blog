{"ast":null,"code":"var _jsxFileName = \"/home/h/workspace/blog/blog-frontend/src/containers/posts/PostListContainer.js\";\nimport React, { useEffect } from 'react';\nimport qs from 'qs';\nimport { withRouter } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PostList from '../../components/posts/PostList';\nimport { listPosts } from '../../modules/posts';\n\nconst PostListContainer = ({\n  location\n}) => {\n  const dispatch = useDispatch();\n\n  const _useSelector = useSelector(({\n    posts,\n    loading,\n    user\n  }) => ({\n    posts: posts.posts,\n    error: posts.error,\n    loading: loading['posts/LIST_POSTS'],\n    user: user.user\n  })),\n        posts = _useSelector.posts,\n        error = _useSelector.error,\n        loading = _useSelector.loading,\n        user = _useSelector.user;\n\n  useEffect(() => {\n    const _qs$parse = qs.parse(location.search, {\n      ignoreQueryPrefix: true\n    }),\n          tag = _qs$parse.tag,\n          username = _qs$parse.username,\n          page = _qs$parse.page;\n\n    dispatch(listPosts({\n      tag,\n      username,\n      page\n    }));\n  }, [dispatch, location.search]);\n  return React.createElement(PostList, {\n    loading: loading,\n    error: error,\n    posts: posts,\n    showWriteButton: user,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  });\n};\n\nexport default withRouter(PostListContainer);","map":{"version":3,"sources":["/home/h/workspace/blog/blog-frontend/src/containers/posts/PostListContainer.js"],"names":["React","useEffect","qs","withRouter","useDispatch","useSelector","PostList","listPosts","PostListContainer","location","dispatch","posts","loading","user","error","parse","search","ignoreQueryPrefix","tag","username","page"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,EAAP,MAAe,IAAf;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,SAASC,SAAT,QAA0B,qBAA1B;;AAEA,MAAMC,iBAAiB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACxC,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;;AADwC,uBAEAC,WAAW,CAC/C,CAAC;AAAEM,IAAAA,KAAF;AAASC,IAAAA,OAAT;AAAkBC,IAAAA;AAAlB,GAAD,MAA+B;AAC3BF,IAAAA,KAAK,EAAEA,KAAK,CAACA,KADc;AAE3BG,IAAAA,KAAK,EAAEH,KAAK,CAACG,KAFc;AAG3BF,IAAAA,OAAO,EAAEA,OAAO,CAAC,kBAAD,CAHW;AAI3BC,IAAAA,IAAI,EAAEA,IAAI,CAACA;AAJgB,GAA/B,CAD+C,CAFX;AAAA,QAEhCF,KAFgC,gBAEhCA,KAFgC;AAAA,QAEzBG,KAFyB,gBAEzBA,KAFyB;AAAA,QAElBF,OAFkB,gBAElBA,OAFkB;AAAA,QAETC,IAFS,gBAETA,IAFS;;AAUxCZ,EAAAA,SAAS,CAAC,MAAM;AAAA,sBACoBC,EAAE,CAACa,KAAH,CAASN,QAAQ,CAACO,MAAlB,EAA0B;AACtDC,MAAAA,iBAAiB,EAAE;AADmC,KAA1B,CADpB;AAAA,UACJC,GADI,aACJA,GADI;AAAA,UACCC,QADD,aACCA,QADD;AAAA,UACWC,IADX,aACWA,IADX;;AAIZV,IAAAA,QAAQ,CAACH,SAAS,CAAC;AAAEW,MAAAA,GAAF;AAAOC,MAAAA,QAAP;AAAiBC,MAAAA;AAAjB,KAAD,CAAV,CAAR;AACH,GALQ,EAKN,CAACV,QAAD,EAAWD,QAAQ,CAACO,MAApB,CALM,CAAT;AAOA,SACI,oBAAC,QAAD;AACI,IAAA,OAAO,EAAEJ,OADb;AAEI,IAAA,KAAK,EAAEE,KAFX;AAGI,IAAA,KAAK,EAAEH,KAHX;AAII,IAAA,eAAe,EAAEE,IAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAQH,CAzBD;;AA2BA,eAAeV,UAAU,CAACK,iBAAD,CAAzB","sourcesContent":["import React, { useEffect } from 'react';\nimport qs from 'qs';\nimport { withRouter } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PostList from '../../components/posts/PostList';\nimport { listPosts } from '../../modules/posts';\n\nconst PostListContainer = ({ location }) => {\n    const dispatch = useDispatch();\n    const { posts, error, loading, user } = useSelector(\n        ({ posts, loading, user }) => ({\n            posts: posts.posts,\n            error: posts.error,\n            loading: loading['posts/LIST_POSTS'],\n            user: user.user,\n        }),\n    );\n    useEffect(() => {\n        const { tag, username, page } = qs.parse(location.search, {\n            ignoreQueryPrefix: true,\n        });\n        dispatch(listPosts({ tag, username, page }));\n    }, [dispatch, location.search]);\n\n    return (\n        <PostList\n            loading={loading}\n            error={error}\n            posts={posts}\n            showWriteButton={user}\n        />\n    );\n};\n\nexport default withRouter(PostListContainer);"]},"metadata":{},"sourceType":"module"}