{"ast":null,"code":"import _defineProperty from \"/home/h/workspace/blog/blog-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/h/workspace/blog/blog-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { createAction, handleActions } from 'redux-actions';\nimport produce from \"immer\";\nimport { takeLatest } from 'redux-saga/effects';\nimport createRequestSaga, { createRequestActionTypes } from \"../lib/createRequetSaga\";\nimport * as authAPI from '../lib/api/auth';\nconst CHANGE_FIELD = 'auth/CHANGE_FIELD';\nconst INITIALIZE_FORM = 'auth/INITIALIZE_FORM';\n\nconst _createRequestActionT = createRequestActionTypes('auth/REGISTER'),\n      _createRequestActionT2 = _slicedToArray(_createRequestActionT, 3),\n      REGISTER = _createRequestActionT2[0],\n      REGISTER_SUCCESS = _createRequestActionT2[1],\n      REGISTER_FAILURE = _createRequestActionT2[2];\n\nconst _createRequestActionT3 = createRequestActionTypes('auth/LOGIN'),\n      _createRequestActionT4 = _slicedToArray(_createRequestActionT3, 3),\n      LOGIN = _createRequestActionT4[0],\n      LOGIN_SUCCESS = _createRequestActionT4[1],\n      LOGIN_FAILURE = _createRequestActionT4[2];\n\nexport const changeField = createAction(CHANGE_FIELD, ({\n  form,\n  key,\n  value\n}) => ({\n  form,\n  //register login\n  key,\n  //username, password, passwordConfirm\n  value // 실제 바꾸려는 값\n\n}));\nexport const initializeForm = createAction(INITIALIZE_FORM, form => form); //register/login\n\nexport const register = createAction(REGISTER, ({\n  username,\n  password\n}) => ({\n  username,\n  password\n}));\nexport const login = createAction(LOGIN, ({\n  username,\n  password\n}) => ({\n  username,\n  password\n}));\nconst registerSaga = createRequestSaga(REGISTER, authAPI.register);\nconst loginSaga = createRequestSaga(LOGIN, authAPI.login);\nexport function* authSaga() {\n  yield takeLatest(REGISTER, registerSaga);\n  yield takeLatest(LOGIN, loginSaga);\n}\nconst initialState = {\n  register: {\n    username: '',\n    password: '1',\n    passwordConfirm: ''\n  },\n  login: {\n    username: '',\n    password: ''\n  },\n  auth: null,\n  authError: null\n};\nconst auth = handleActions({\n  [CHANGE_FIELD]: (state, {\n    payload: {\n      form,\n      key,\n      value\n    }\n  }) => produce(state, draft => {\n    draft[form][key] = value; //state.register.username 변경\n  }),\n  [INITIALIZE_FORM]: (state, {\n    payload: form\n  }) => _objectSpread({}, state, {\n    [form]: initialState[form],\n    authError: null //폼전환시 회원인증 에러 초기화\n\n  }),\n  [REGISTER_SUCCESS]: (state, {\n    payload: auth\n  }) => _objectSpread({}, state, {\n    authError: null,\n    auth\n  }),\n  [REGISTER_FAILURE]: (state, {\n    payload: error\n  }) => _objectSpread({}, state, {\n    authError: error\n  }),\n  [LOGIN_SUCCESS]: (state, {\n    payload: auth\n  }) => _objectSpread({}, state, {\n    authError: null,\n    auth\n  }),\n  [LOGIN_FAILURE]: (state, {\n    payload: error\n  }) => _objectSpread({}, state, {\n    authError: error\n  })\n}, initialState);\nexport default auth;","map":{"version":3,"sources":["/home/h/workspace/blog/blog-frontend/src/modules/auth.js"],"names":["createAction","handleActions","produce","takeLatest","createRequestSaga","createRequestActionTypes","authAPI","CHANGE_FIELD","INITIALIZE_FORM","REGISTER","REGISTER_SUCCESS","REGISTER_FAILURE","LOGIN","LOGIN_SUCCESS","LOGIN_FAILURE","changeField","form","key","value","initializeForm","register","username","password","login","registerSaga","loginSaga","authSaga","initialState","passwordConfirm","auth","authError","state","payload","draft","error"],"mappings":"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","sourcesContent":["import {createAction, handleActions} from 'redux-actions';\nimport produce from \"immer\";\nimport {takeLatest} from 'redux-saga/effects'\nimport createRequestSaga, {createRequestActionTypes} from \"../lib/createRequetSaga\";\nimport * as authAPI from '../lib/api/auth';\n\nconst CHANGE_FIELD = 'auth/CHANGE_FIELD';\nconst INITIALIZE_FORM = 'auth/INITIALIZE_FORM';\n\nconst [REGISTER, REGISTER_SUCCESS, REGISTER_FAILURE] = createRequestActionTypes('auth/REGISTER');\n\nconst [LOGIN, LOGIN_SUCCESS, LOGIN_FAILURE] = createRequestActionTypes('auth/LOGIN');\n\nexport const changeField = createAction(\n    CHANGE_FIELD,\n    ({form, key, value}) => ({\n        form,//register login\n        key,//username, password, passwordConfirm\n        value, // 실제 바꾸려는 값\n    }),\n);\n\nexport const initializeForm = createAction(INITIALIZE_FORM, form => form); //register/login\n\nexport const register = createAction(REGISTER, ({username, password}) => ({\n    username,\n    password,\n}));\n\nexport const login = createAction(LOGIN, ({username, password}) => ({\n    username,\n    password\n}));\n\nconst registerSaga = createRequestSaga(REGISTER, authAPI.register);\nconst loginSaga = createRequestSaga(LOGIN, authAPI.login);\n\nexport function* authSaga() {\n    yield takeLatest(REGISTER, registerSaga);\n    yield takeLatest(LOGIN, loginSaga);\n}\n\nconst initialState = {\n    register: {\n        username: '',\n        password: '1',\n        passwordConfirm: '',\n    },\n    login: {\n        username: '',\n        password: '',\n    },\n    auth: null,\n    authError: null,\n};\n\nconst auth = handleActions(\n    {\n        [CHANGE_FIELD]: (state, {payload: {form, key, value}}) =>\n            produce(state, draft => {\n                draft[form][key] = value; //state.register.username 변경\n            }),\n        [INITIALIZE_FORM]: (state, {payload: form}) => ({\n            ...state,\n            [form]: initialState[form],\n            authError: null, //폼전환시 회원인증 에러 초기화\n        }),\n        [REGISTER_SUCCESS]: (state, {payload: auth}) => ({\n            ...state,\n            authError: null,\n            auth,\n        }),\n        [REGISTER_FAILURE]: (state, {payload: error}) => ({\n            ...state,\n            authError: error,\n        }),\n        [LOGIN_SUCCESS]: (state, {payload: auth}) => ({\n            ...state,\n            authError: null,\n            auth,\n        }),\n        [LOGIN_FAILURE]: (state, {payload: error}) => ({\n            ...state,\n            authError: error,\n        }),\n    },\n    initialState\n);\n\nexport default auth;"]},"metadata":{},"sourceType":"module"}