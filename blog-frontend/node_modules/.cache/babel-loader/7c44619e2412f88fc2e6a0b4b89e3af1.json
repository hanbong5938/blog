{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/h/workspace/blog/blog-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/h/workspace/blog/blog-frontend/src/components/write/Editor.js\";\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n    .ql-editor{\\n    padding; 0;\\n    min-height: 320px;\\n    font-size: 1.125rem;\\n    line-height: 1.5;\\n    }\\n    .ql-editor.ql-blank::before{\\n        left:0px;\\n    }\\n\"]);\n\n  _templateObject3 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n    font-size:3rem;\\n    outline:none;\\n    padding-bottom: 0.5rem;\\n    border:none;\\n    border-bottom: 1px solid \", \";\\n    margin-bottom: 2rem;\\n    width: 100%;   \\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n    padding-top : 5rem;\\n    padding-bottom: 5rem;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useRef, useEffect } from 'react';\nimport Quill from 'quill';\nimport 'quill/dist/quill.bubble.css';\nimport styled from 'styled-components';\nimport palette from \"../../lib/styles/palette\";\nimport Responsive from \"../common/Responsive\";\nconst EditorBlock = styled(Responsive)(_templateObject());\nconst TitleInput = styled.input(_templateObject2(), palette.gray[4]);\nconst QuillWrapper = styled.div(_templateObject3());\n\nconst Editor = ({\n  title,\n  body,\n  onChangeField\n}) => {\n  const quillElement = useRef(null); //Quill을 적용할 Div Element\n\n  const quillInstance = useRef(null); //Quill인스턴스 설정\n\n  useEffect(() => {\n    quillInstance.current = new Quill(quillElement.current, {\n      theme: 'bubble',\n      placeholder: '내용을 작성하세요....',\n      modules: {\n        toolbar: [[{\n          header: '1'\n        }, {\n          header: '2'\n        }], ['bold', 'italic', 'underline', 'strike'], [{\n          list: 'ordered'\n        }, {\n          list: 'bullet'\n        }], ['blockquote', 'code-block', 'link', 'image']]\n      }\n    });\n    const quill = quillInstance.current;\n    quill.on('text-change', (delta, oldDelta, source) => {\n      if (source === 'user') {\n        onChangeField({\n          key: 'body',\n          value: quill.root.innerHTML\n        });\n      }\n    });\n  }, [onChangeField]);\n\n  const onChangeTitle = e => {\n    onChangeField({\n      key: 'title',\n      value: e.target.value\n    });\n  };\n\n  return React.createElement(EditorBlock, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(TitleInput, {\n    placeholder: \"\\uC81C\\uBAA9\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\",\n    onChange: onChangeTitle,\n    value: title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), React.createElement(QuillWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    ref: quillElement,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  })));\n};\n\nexport default Editor;","map":{"version":3,"sources":["/home/h/workspace/blog/blog-frontend/src/components/write/Editor.js"],"names":["React","useRef","useEffect","Quill","styled","palette","Responsive","EditorBlock","TitleInput","input","gray","QuillWrapper","div","Editor","title","body","onChangeField","quillElement","quillInstance","current","theme","placeholder","modules","toolbar","header","list","quill","on","delta","oldDelta","source","key","value","root","innerHTML","onChangeTitle","e","target"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,MAAf,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,6BAAP;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AAEA,MAAMC,WAAW,GAAGH,MAAM,CAACE,UAAD,CAAT,mBAAjB;AAKA,MAAME,UAAU,GAAGJ,MAAM,CAACK,KAAV,qBAKeJ,OAAO,CAACK,IAAR,CAAa,CAAb,CALf,CAAhB;AAUA,MAAMC,YAAY,GAAGP,MAAM,CAACQ,GAAV,oBAAlB;;AAYA,MAAMC,MAAM,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA,IAAR;AAAcC,EAAAA;AAAd,CAAD,KAAkC;AAC7C,QAAMC,YAAY,GAAGhB,MAAM,CAAC,IAAD,CAA3B,CAD6C,CACV;;AACnC,QAAMiB,aAAa,GAAGjB,MAAM,CAAC,IAAD,CAA5B,CAF6C,CAET;;AAEpCC,EAAAA,SAAS,CAAC,MAAM;AACZgB,IAAAA,aAAa,CAACC,OAAd,GAAwB,IAAIhB,KAAJ,CAAUc,YAAY,CAACE,OAAvB,EAAgC;AACpDC,MAAAA,KAAK,EAAE,QAD6C;AAEpDC,MAAAA,WAAW,EAAE,eAFuC;AAGpDC,MAAAA,OAAO,EAAE;AACLC,QAAAA,OAAO,EAAE,CACL,CAAC;AAACC,UAAAA,MAAM,EAAE;AAAT,SAAD,EAAgB;AAACA,UAAAA,MAAM,EAAE;AAAT,SAAhB,CADK,EAEL,CAAC,MAAD,EAAS,QAAT,EAAmB,WAAnB,EAAgC,QAAhC,CAFK,EAGL,CAAC;AAACC,UAAAA,IAAI,EAAE;AAAP,SAAD,EAAoB;AAACA,UAAAA,IAAI,EAAE;AAAP,SAApB,CAHK,EAIL,CAAC,YAAD,EAAe,YAAf,EAA6B,MAA7B,EAAqC,OAArC,CAJK;AADJ;AAH2C,KAAhC,CAAxB;AAaA,UAAMC,KAAK,GAAGR,aAAa,CAACC,OAA5B;AACAO,IAAAA,KAAK,CAACC,EAAN,CAAS,aAAT,EAAwB,CAACC,KAAD,EAAQC,QAAR,EAAkBC,MAAlB,KAA6B;AACjD,UAAIA,MAAM,KAAK,MAAf,EAAuB;AACnBd,QAAAA,aAAa,CAAC;AAACe,UAAAA,GAAG,EAAE,MAAN;AAAcC,UAAAA,KAAK,EAAEN,KAAK,CAACO,IAAN,CAAWC;AAAhC,SAAD,CAAb;AACH;AACJ,KAJD;AAKH,GApBQ,EAoBN,CAAClB,aAAD,CApBM,CAAT;;AAsBA,QAAMmB,aAAa,GAAGC,CAAC,IAAI;AACvBpB,IAAAA,aAAa,CAAC;AAAEe,MAAAA,GAAG,EAAE,OAAP;AAAgBC,MAAAA,KAAK,EAAEI,CAAC,CAACC,MAAF,CAASL;AAAhC,KAAD,CAAb;AACH,GAFD;;AAIA,SACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AAAY,IAAA,WAAW,EAAC,mDAAxB;AAAoC,IAAA,QAAQ,EAAEG,aAA9C;AAA6D,IAAA,KAAK,EAAErB,KAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,GAAG,EAAEG,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFJ,CADJ;AAQH,CAtCD;;AAwCA,eAAeJ,MAAf","sourcesContent":["import React, {useRef, useEffect} from 'react';\nimport Quill from 'quill';\nimport 'quill/dist/quill.bubble.css';\nimport styled from 'styled-components';\nimport palette from \"../../lib/styles/palette\";\nimport Responsive from \"../common/Responsive\";\n\nconst EditorBlock = styled(Responsive)`\n    padding-top : 5rem;\n    padding-bottom: 5rem;\n`;\n\nconst TitleInput = styled.input`\n    font-size:3rem;\n    outline:none;\n    padding-bottom: 0.5rem;\n    border:none;\n    border-bottom: 1px solid ${palette.gray[4]};\n    margin-bottom: 2rem;\n    width: 100%;   \n`;\n\nconst QuillWrapper = styled.div`\n    .ql-editor{\n    padding; 0;\n    min-height: 320px;\n    font-size: 1.125rem;\n    line-height: 1.5;\n    }\n    .ql-editor.ql-blank::before{\n        left:0px;\n    }\n`;\n\nconst Editor = ({title, body, onChangeField}) => {\n    const quillElement = useRef(null); //Quill을 적용할 Div Element\n    const quillInstance = useRef(null); //Quill인스턴스 설정\n\n    useEffect(() => {\n        quillInstance.current = new Quill(quillElement.current, {\n            theme: 'bubble',\n            placeholder: '내용을 작성하세요....',\n            modules: {\n                toolbar: [\n                    [{header: '1'}, {header: '2'}],\n                    ['bold', 'italic', 'underline', 'strike'],\n                    [{list: 'ordered'}, {list: 'bullet'}],\n                    ['blockquote', 'code-block', 'link', 'image'],\n                ],\n            },\n        });\n\n        const quill = quillInstance.current;\n        quill.on('text-change', (delta, oldDelta, source) => {\n            if (source === 'user') {\n                onChangeField({key: 'body', value: quill.root.innerHTML});\n            }\n        });\n    }, [onChangeField]);\n\n    const onChangeTitle = e => {\n        onChangeField({ key: 'title', value: e.target.value });\n    };\n\n    return (\n        <EditorBlock>\n            <TitleInput placeholder=\"제목을 입력하세요\" onChange={onChangeTitle} value={title}/>\n            <QuillWrapper>\n                <div ref={quillElement}/>\n            </QuillWrapper>\n        </EditorBlock>\n    );\n};\n\nexport default Editor;"]},"metadata":{},"sourceType":"module"}