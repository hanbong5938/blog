{"ast":null,"code":"var _jsxFileName = \"/home/h/workspace/blog/blog-frontend/src/containers/post/PostViewerContainer.js\";\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { readPost, unloadPost } from '../../modules/post';\nimport PostViewer from '../../components/post/PostViewer';\n\nconst PostViewerContainer = ({\n  match\n}) => {\n  // 처음 마운트될 때 포스트 읽기 API 요청\n  const postId = match.params.postId;\n  const dispatch = useDispatch();\n\n  const _useSelector = useSelector(({\n    post,\n    loading\n  }) => ({\n    post: post.post,\n    error: post.error,\n    loading: loading['post/READ_POST']\n  })),\n        post = _useSelector.post,\n        error = _useSelector.error,\n        loading = _useSelector.loading;\n\n  useEffect(() => {\n    dispatch(readPost(postId)); // 언마운트될 때 리덕스에서 포스트 데이터 제거\n\n    return () => {\n      dispatch(unloadPost());\n    };\n  }, [dispatch, postId]);\n  return React.createElement(PostViewer, {\n    post: post,\n    loading: loading,\n    error: error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  });\n};\n\nexport default withRouter(PostViewerContainer);","map":{"version":3,"sources":["/home/h/workspace/blog/blog-frontend/src/containers/post/PostViewerContainer.js"],"names":["React","useEffect","useDispatch","useSelector","withRouter","readPost","unloadPost","PostViewer","PostViewerContainer","match","postId","params","dispatch","post","loading","error"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,SAAQC,QAAR,EAAkBC,UAAlB,QAAmC,oBAAnC;AACA,OAAOC,UAAP,MAAuB,kCAAvB;;AAEA,MAAMC,mBAAmB,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAa;AACrC;AADqC,QAE9BC,MAF8B,GAEpBD,KAAK,CAACE,MAFc,CAE9BD,MAF8B;AAGrC,QAAME,QAAQ,GAAGV,WAAW,EAA5B;;AAHqC,uBAINC,WAAW,CAAC,CAAC;AAACU,IAAAA,IAAD;AAAOC,IAAAA;AAAP,GAAD,MAAsB;AAC7DD,IAAAA,IAAI,EAAEA,IAAI,CAACA,IADkD;AAE7DE,IAAAA,KAAK,EAAEF,IAAI,CAACE,KAFiD;AAG7DD,IAAAA,OAAO,EAAEA,OAAO,CAAC,gBAAD;AAH6C,GAAtB,CAAD,CAJL;AAAA,QAI9BD,IAJ8B,gBAI9BA,IAJ8B;AAAA,QAIxBE,KAJwB,gBAIxBA,KAJwB;AAAA,QAIjBD,OAJiB,gBAIjBA,OAJiB;;AAUrCb,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,QAAQ,CAACP,QAAQ,CAACK,MAAD,CAAT,CAAR,CADY,CAEZ;;AACA,WAAO,MAAM;AACTE,MAAAA,QAAQ,CAACN,UAAU,EAAX,CAAR;AACH,KAFD;AAGH,GANQ,EAMN,CAACM,QAAD,EAAWF,MAAX,CANM,CAAT;AAQA,SAAO,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAEG,IAAlB;AAAwB,IAAA,OAAO,EAAEC,OAAjC;AAA0C,IAAA,KAAK,EAAEC,KAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACH,CAnBD;;AAqBA,eAAeX,UAAU,CAACI,mBAAD,CAAzB","sourcesContent":["import React, {useEffect} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {withRouter} from 'react-router-dom';\nimport {readPost, unloadPost} from '../../modules/post';\nimport PostViewer from '../../components/post/PostViewer';\n\nconst PostViewerContainer = ({match}) => {\n    // 처음 마운트될 때 포스트 읽기 API 요청\n    const {postId} = match.params;\n    const dispatch = useDispatch();\n    const {post, error, loading} = useSelector(({post, loading}) => ({\n        post: post.post,\n        error: post.error,\n        loading: loading['post/READ_POST'],\n    }));\n\n    useEffect(() => {\n        dispatch(readPost(postId));\n        // 언마운트될 때 리덕스에서 포스트 데이터 제거\n        return () => {\n            dispatch(unloadPost());\n        };\n    }, [dispatch, postId]);\n\n    return <PostViewer post={post} loading={loading} error={error}/>;\n};\n\nexport default withRouter(PostViewerContainer);"]},"metadata":{},"sourceType":"module"}