{"ast":null,"code":"var _jsxFileName = \"/home/h/workspace/blog/blog-frontend/src/containers/write/WriteActionButtonsContainer.js\";\nimport React, { useEffect } from 'react';\nimport WriteActionButtons from \"../../components/write/WriteActionButtons\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { withRouter } from 'react-router-dom';\nimport { writePost } from \"../../modules/write\";\n\nconst WriteActionButtonsContainer = ({\n  history\n}) => {\n  const dispatch = useDispatch();\n\n  const _useSelector = useSelector(({\n    write\n  }) => ({\n    title: write.title,\n    body: write.body,\n    tags: write.tags,\n    post: write.post,\n    postError: write.postError\n  })),\n        title = _useSelector.title,\n        body = _useSelector.body,\n        tags = _useSelector.tags,\n        post = _useSelector.post,\n        postError = _useSelector.postError; //글 등록\n\n\n  const onPublish = () => {\n    dispatch(writePost({\n      title,\n      body,\n      tags\n    }));\n  };\n\n  const onCancel = () => {\n    history.goBack();\n  }; //성공 or 실패시 할 작업\n\n\n  useEffect(() => {\n    if (post) {\n      const _id = post._id,\n            user = post.user;\n      history.push(\"/@\".concat(user.username, \"/\").concat(_id));\n    }\n\n    if (postError) {\n      console.log(postError);\n    }\n  }, [history, post, postError]);\n  return React.createElement(WriteActionButtons, {\n    onPublish: onPublish,\n    onCancel: onCancel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  });\n};\n\nexport default withRouter(WriteActionButtonsContainer);","map":{"version":3,"sources":["/home/h/workspace/blog/blog-frontend/src/containers/write/WriteActionButtonsContainer.js"],"names":["React","useEffect","WriteActionButtons","useSelector","useDispatch","withRouter","writePost","WriteActionButtonsContainer","history","dispatch","write","title","body","tags","post","postError","onPublish","onCancel","goBack","_id","user","push","username","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,kBAAP,MAA+B,2CAA/B;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,SAAQC,SAAR,QAAwB,qBAAxB;;AAEA,MAAMC,2BAA2B,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAe;AAC/C,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;;AAD+C,uBAEFD,WAAW,CAAC,CAAC;AAACO,IAAAA;AAAD,GAAD,MAAc;AACnEC,IAAAA,KAAK,EAAED,KAAK,CAACC,KADsD;AAEnEC,IAAAA,IAAI,EAAEF,KAAK,CAACE,IAFuD;AAGnEC,IAAAA,IAAI,EAAEH,KAAK,CAACG,IAHuD;AAInEC,IAAAA,IAAI,EAAEJ,KAAK,CAACI,IAJuD;AAKnEC,IAAAA,SAAS,EAAEL,KAAK,CAACK;AALkD,GAAd,CAAD,CAFT;AAAA,QAExCJ,KAFwC,gBAExCA,KAFwC;AAAA,QAEjCC,IAFiC,gBAEjCA,IAFiC;AAAA,QAE3BC,IAF2B,gBAE3BA,IAF2B;AAAA,QAErBC,IAFqB,gBAErBA,IAFqB;AAAA,QAEfC,SAFe,gBAEfA,SAFe,EAU/C;;;AACA,QAAMC,SAAS,GAAG,MAAM;AACpBP,IAAAA,QAAQ,CAACH,SAAS,CAAC;AACXK,MAAAA,KADW;AAEXC,MAAAA,IAFW;AAGXC,MAAAA;AAHW,KAAD,CAAV,CAAR;AAMH,GAPD;;AASA,QAAMI,QAAQ,GAAG,MAAM;AACnBT,IAAAA,OAAO,CAACU,MAAR;AACH,GAFD,CApB+C,CAwB/C;;;AACAjB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIa,IAAJ,EAAU;AAAA,YACCK,GADD,GACcL,IADd,CACCK,GADD;AAAA,YACMC,IADN,GACcN,IADd,CACMM,IADN;AAENZ,MAAAA,OAAO,CAACa,IAAR,aAAkBD,IAAI,CAACE,QAAvB,cAAmCH,GAAnC;AACH;;AACD,QAAIJ,SAAJ,EAAe;AACXQ,MAAAA,OAAO,CAACC,GAAR,CAAYT,SAAZ;AACH;AACJ,GARQ,EAQN,CAACP,OAAD,EAAUM,IAAV,EAAgBC,SAAhB,CARM,CAAT;AASA,SAAO,oBAAC,kBAAD;AAAoB,IAAA,SAAS,EAAEC,SAA/B;AAA0C,IAAA,QAAQ,EAAEC,QAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACH,CAnCD;;AAqCA,eAAeZ,UAAU,CAACE,2BAAD,CAAzB","sourcesContent":["import React, {useEffect} from 'react';\nimport WriteActionButtons from \"../../components/write/WriteActionButtons\";\nimport {useSelector, useDispatch} from \"react-redux\";\nimport {withRouter} from 'react-router-dom'\nimport {writePost} from \"../../modules/write\";\n\nconst WriteActionButtonsContainer = ({history}) => {\n    const dispatch = useDispatch();\n    const {title, body, tags, post, postError} = useSelector(({write}) => ({\n        title: write.title,\n        body: write.body,\n        tags: write.tags,\n        post: write.post,\n        postError: write.postError,\n    }));\n\n    //글 등록\n    const onPublish = () => {\n        dispatch(writePost({\n                title,\n                body,\n                tags,\n            }),\n        );\n    };\n\n    const onCancel = () => {\n        history.goBack();\n    };\n\n    //성공 or 실패시 할 작업\n    useEffect(() => {\n        if (post) {\n            const {_id, user} = post;\n            history.push(`/@${user.username}/${_id}`);\n        }\n        if (postError) {\n            console.log(postError);\n        }\n    }, [history, post, postError]);\n    return <WriteActionButtons onPublish={onPublish} onCancel={onCancel}/>;\n};\n\nexport default withRouter(WriteActionButtonsContainer);\n"]},"metadata":{},"sourceType":"module"}