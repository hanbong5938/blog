{"ast":null,"code":"var _jsxFileName = \"/home/h/workspace/blog/blog-frontend/src/containers/auth/LoginForm.js\";\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { withRouter } from 'react-router-dom';\nimport { changeField, initializeForm, login } from \"../../modules/auth\";\nimport AuthForm from \"../../components/auth/AuthForm\";\nimport { check } from \"../../modules/user\";\n\nconst LoginForm = history => {\n  const dispatch = useDispatch();\n\n  const _useSelector = useSelector(({\n    auth,\n    user\n  }) => ({\n    form: auth.login,\n    auth: auth.auth,\n    authError: auth.authError,\n    user: user.user\n  })),\n        form = _useSelector.form,\n        auth = _useSelector.auth,\n        authError = _useSelector.authError,\n        user = _useSelector.user;\n\n  const onChange = e => {\n    const _e$target = e.target,\n          value = _e$target.value,\n          name = _e$target.name;\n    dispatch(changeField({\n      form: 'login',\n      key: name,\n      value\n    }));\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const username = form.username,\n          password = form.password;\n    dispatch(login({\n      username,\n      password\n    }));\n  };\n\n  useEffect(() => {\n    dispatch(initializeForm('login'));\n  }, [dispatch]);\n  useEffect(() => {\n    if (authError) {\n      console.log(\"로그인 오류\");\n      console.log(authError);\n      return;\n    }\n\n    if (auth) {\n      console.log(\"성공\");\n      dispatch(check());\n    }\n  }, [auth, authError, dispatch]);\n  useEffect(() => {\n    if (user) {\n      history.push('/');\n    }\n  }, [history, user]);\n  return React.createElement(AuthForm, {\n    type: 'login',\n    form: form,\n    onChange: onChange,\n    onSUbmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  });\n};\n\nexport default withRouter(LoginForm);","map":{"version":3,"sources":["/home/h/workspace/blog/blog-frontend/src/containers/auth/LoginForm.js"],"names":["React","useEffect","useDispatch","useSelector","withRouter","changeField","initializeForm","login","AuthForm","check","LoginForm","history","dispatch","auth","user","form","authError","onChange","e","target","value","name","key","onSubmit","preventDefault","username","password","console","log","push"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,SAAQC,WAAR,EAAqBC,cAArB,EAAqCC,KAArC,QAAiD,oBAAjD;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,SAAQC,KAAR,QAAoB,oBAApB;;AAEA,MAAMC,SAAS,GAAIC,OAAD,IAAa;AAC3B,QAAMC,QAAQ,GAAGV,WAAW,EAA5B;;AAD2B,uBAEWC,WAAW,CAAC,CAAC;AAACU,IAAAA,IAAD;AAAOC,IAAAA;AAAP,GAAD,MAAmB;AACjEC,IAAAA,IAAI,EAAEF,IAAI,CAACN,KADsD;AAEjEM,IAAAA,IAAI,EAAEA,IAAI,CAACA,IAFsD;AAGjEG,IAAAA,SAAS,EAAEH,IAAI,CAACG,SAHiD;AAIjEF,IAAAA,IAAI,EAAEA,IAAI,CAACA;AAJsD,GAAnB,CAAD,CAFtB;AAAA,QAEpBC,IAFoB,gBAEpBA,IAFoB;AAAA,QAEdF,IAFc,gBAEdA,IAFc;AAAA,QAERG,SAFQ,gBAERA,SAFQ;AAAA,QAEGF,IAFH,gBAEGA,IAFH;;AAS3B,QAAMG,QAAQ,GAAGC,CAAC,IAAI;AAAA,sBACIA,CAAC,CAACC,MADN;AAAA,UACXC,KADW,aACXA,KADW;AAAA,UACJC,IADI,aACJA,IADI;AAElBT,IAAAA,QAAQ,CACJP,WAAW,CAAC;AACRU,MAAAA,IAAI,EAAE,OADE;AAERO,MAAAA,GAAG,EAAED,IAFG;AAGRD,MAAAA;AAHQ,KAAD,CADP,CAAR;AAOH,GATD;;AAWA,QAAMG,QAAQ,GAAGL,CAAC,IAAI;AAClBA,IAAAA,CAAC,CAACM,cAAF;AADkB,UAEXC,QAFW,GAEWV,IAFX,CAEXU,QAFW;AAAA,UAEDC,QAFC,GAEWX,IAFX,CAEDW,QAFC;AAGlBd,IAAAA,QAAQ,CAACL,KAAK,CAAC;AAACkB,MAAAA,QAAD;AAAWC,MAAAA;AAAX,KAAD,CAAN,CAAR;AACH,GAJD;;AAMAzB,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,QAAQ,CAACN,cAAc,CAAC,OAAD,CAAf,CAAR;AACH,GAFQ,EAEN,CAACM,QAAD,CAFM,CAAT;AAIAX,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIe,SAAJ,EAAe;AACXW,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYZ,SAAZ;AACA;AACH;;AACD,QAAIH,IAAJ,EAAU;AACNc,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACAhB,MAAAA,QAAQ,CAACH,KAAK,EAAN,CAAR;AACH;AACJ,GAVQ,EAUN,CAACI,IAAD,EAAOG,SAAP,EAAkBJ,QAAlB,CAVM,CAAT;AAYAX,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIa,IAAJ,EAAU;AACNH,MAAAA,OAAO,CAACkB,IAAR,CAAa,GAAb;AACH;AACJ,GAJQ,EAIN,CAAClB,OAAD,EAAUG,IAAV,CAJM,CAAT;AAMA,SACI,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAE,OAAhB;AAAyB,IAAA,IAAI,EAAEC,IAA/B;AAAqC,IAAA,QAAQ,EAAEE,QAA/C;AAAyD,IAAA,QAAQ,EAAEM,QAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAGH,CAnDD;;AAsDA,eAAenB,UAAU,CAACM,SAAD,CAAzB","sourcesContent":["import React, {useEffect} from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {withRouter} from 'react-router-dom';\nimport {changeField, initializeForm, login} from \"../../modules/auth\";\nimport AuthForm from \"../../components/auth/AuthForm\";\nimport {check} from \"../../modules/user\";\n\nconst LoginForm = (history) => {\n    const dispatch = useDispatch();\n    const {form, auth, authError, user} = useSelector(({auth, user}) => ({\n        form: auth.login,\n        auth: auth.auth,\n        authError: auth.authError,\n        user: user.user\n    }));\n\n    const onChange = e => {\n        const {value, name} = e.target;\n        dispatch(\n            changeField({\n                form: 'login',\n                key: name,\n                value\n            })\n        );\n    };\n\n    const onSubmit = e => {\n        e.preventDefault();\n        const {username, password} = form;\n        dispatch(login({username, password}));\n    };\n\n    useEffect(() => {\n        dispatch(initializeForm('login'));\n    }, [dispatch]);\n\n    useEffect(() => {\n        if (authError) {\n            console.log(\"로그인 오류\");\n            console.log(authError);\n            return;\n        }\n        if (auth) {\n            console.log(\"성공\");\n            dispatch(check());\n        }\n    }, [auth, authError, dispatch]);\n\n    useEffect(() => {\n        if (user) {\n            history.push('/');\n        }\n    }, [history, user]);\n\n    return (\n        <AuthForm type={'login'} form={form} onChange={onChange} onSUbmit={onSubmit}/>\n    );\n};\n\n\nexport default withRouter(LoginForm);\n"]},"metadata":{},"sourceType":"module"}