{"ast":null,"code":"import _slicedToArray from \"/home/h/workspace/blog/blog-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/home/h/workspace/blog/blog-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/h/workspace/blog/blog-frontend/src/components/write/TagBox.js\";\n\nfunction _templateObject4() {\n  const data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  margin-top: 0.5rem;\\n\"]);\n\n  _templateObject4 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n    margin-right: 0.5rem;\\n    color: \", \";\\n    cursor: pointer;\\n    &:hover {\\n    opacity: 0.5;\\n    }\\n\"]);\n\n  _templateObject3 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n    border-radius: 4px;\\n    overflow: hidden;\\n    display:flex;\\n    width: 256pxx;\\n    border: 1px solid \", \";/*\\uC2A4\\uD0C0\\uC77C \\uCD08\\uAE30\\uD654*/\\n    input,\\n    button{\\n    outline: none;\\n    border:none;\\n    font-size: 1rem;\\n    }\\n    \\n    input{\\n    padding:0.5rem;\\n    flex: 1;\\n    }\\n    \\n    button {\\n    cursor: pointer;\\n    padding-right: 1rem;\\n    padding-left: 1rem;\\n    border: none;\\n    background: \", \";\\n    color:white;\\n    font-weight: bold;\\n    &:hover{\\n    background: \", \";\\n    }\\n}    \\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n    width: 100%;\\n    border-top: 1px solid \", \";\\n    padding-top: 2rem;\\n    \\n    h4{\\n    color: \", \";\\n    margin-top: 0;\\n    margin-bottom: 0.5rem;\\n    }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useCallback } from 'react';\nimport styled from 'styled-components';\nimport palette from \"../../lib/styles/palette\";\nconst TagBoxBlock = styled.div(_templateObject(), palette.gray[2], palette.gray[8]);\nconst TagForm = styled.div(_templateObject2(), palette.gray[9], palette.gray[8], palette.gray[6]);\nconst Tag = styled.div(_templateObject3(), palette.gray[6]);\nconst TagListBlock = styled.div(_templateObject4()); //react.memo사용하여 tag값이 변경시에만 리렌러링\n\nconst TagItem = React.memo(({\n  tag,\n  onRemove\n}) => React.createElement(Tag, {\n  onClick: () => onRemove(tag),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 64\n  },\n  __self: this\n}, \"#\", tag));\nconst TagList = React.memo(({\n  tags,\n  onRemove\n}) => {\n  React.createElement(TagListBlock, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, tags.map(tag => React.createElement(TagItem, {\n    key: tag,\n    tag: tag,\n    onRemove: onRemove,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  })));\n});\n\nconst TagBox = () => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        input = _useState2[0],\n        setInput = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        localTags = _useState4[0],\n        setLocalTags = _useState4[1];\n\n  const insertTag = useCallback(tag => {\n    if (!tag) return;\n    if (localTags.includes(tag)) return; //존재하는 경우 추가X\n\n    setLocalTags([...localTags, tag]);\n  }, [localTags]);\n  return React.createElement(TagBoxBlock, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"\\uD0DC\\uADF8\"), React.createElement(TagForm, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    placeholder: \"태그를 입력하세요\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"\\uCD94\\uAC00\")), React.createElement(TagList, {\n    tags: ['태그1', '태그2', '태그3'],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }));\n};\n\nexport default TagBox;","map":{"version":3,"sources":["/home/h/workspace/blog/blog-frontend/src/components/write/TagBox.js"],"names":["React","useState","useCallback","styled","palette","TagBoxBlock","div","gray","TagForm","Tag","TagListBlock","TagItem","memo","tag","onRemove","TagList","tags","map","TagBox","input","setInput","localTags","setLocalTags","insertTag","includes"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,WAAzB,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,OAAP,MAAoB,0BAApB;AAEA,MAAMC,WAAW,GAAGF,MAAM,CAACG,GAAV,oBAEWF,OAAO,CAACG,IAAR,CAAa,CAAb,CAFX,EAMJH,OAAO,CAACG,IAAR,CAAa,CAAb,CANI,CAAjB;AAYA,MAAMC,OAAO,GAAGL,MAAM,CAACG,GAAV,qBAKWF,OAAO,CAACG,IAAR,CAAa,CAAb,CALX,EAuBKH,OAAO,CAACG,IAAR,CAAa,CAAb,CAvBL,EA2BKH,OAAO,CAACG,IAAR,CAAa,CAAb,CA3BL,CAAb;AAgCA,MAAME,GAAG,GAAGN,MAAM,CAACG,GAAV,qBAEIF,OAAO,CAACG,IAAR,CAAa,CAAb,CAFJ,CAAT;AASA,MAAMG,YAAY,GAAGP,MAAM,CAACG,GAAV,oBAAlB,C,CAKA;;AACA,MAAMK,OAAO,GAAGX,KAAK,CAACY,IAAN,CAAW,CAAC;AAACC,EAAAA,GAAD;AAAMC,EAAAA;AAAN,CAAD,KAAqB,oBAAC,GAAD;AAAK,EAAA,OAAO,EAAE,MAAMA,QAAQ,CAACD,GAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAqCA,GAArC,CAAhC,CAAhB;AAEA,MAAME,OAAO,GAAGf,KAAK,CAACY,IAAN,CAAW,CAAC;AAACI,EAAAA,IAAD;AAAOF,EAAAA;AAAP,CAAD,KAAsB;AAC7C,sBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKE,IAAI,CAACC,GAAL,CAASJ,GAAG,IACT,oBAAC,OAAD;AAAS,IAAA,GAAG,EAAEA,GAAd;AAAmB,IAAA,GAAG,EAAEA,GAAxB;AAA6B,IAAA,QAAQ,EAAEC,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CADL;AAKH,CANe,CAAhB;;AAQA,MAAMI,MAAM,GAAG,MAAM;AAAA,oBACSjB,QAAQ,CAAC,EAAD,CADjB;AAAA;AAAA,QACVkB,KADU;AAAA,QACHC,QADG;;AAAA,qBAEiBnB,QAAQ,CAAC,EAAD,CAFzB;AAAA;AAAA,QAEVoB,SAFU;AAAA,QAECC,YAFD;;AAIjB,QAAMC,SAAS,GAAGrB,WAAW,CACzBW,GAAG,IAAI;AACH,QAAI,CAACA,GAAL,EAAU;AACV,QAAIQ,SAAS,CAACG,QAAV,CAAmBX,GAAnB,CAAJ,EAA6B,OAF1B,CAEiC;;AACpCS,IAAAA,YAAY,CAAC,CAAC,GAAGD,SAAJ,EAAeR,GAAf,CAAD,CAAZ;AACH,GALwB,EAMzB,CAACQ,SAAD,CANyB,CAA7B;AASA,SACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,WAAW,EAAE,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAQ,IAAA,IAAI,EAAE,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,CAFJ,EAMI,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAE,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,CADJ;AAUH,CAvBD;;AAyBA,eAAeH,MAAf","sourcesContent":["import React, {useState, useCallback} from 'react';\nimport styled from 'styled-components';\nimport palette from \"../../lib/styles/palette\";\n\nconst TagBoxBlock = styled.div`\n    width: 100%;\n    border-top: 1px solid ${palette.gray[2]};\n    padding-top: 2rem;\n    \n    h4{\n    color: ${palette.gray[8]};\n    margin-top: 0;\n    margin-bottom: 0.5rem;\n    }\n`;\n\nconst TagForm = styled.div`\n    border-radius: 4px;\n    overflow: hidden;\n    display:flex;\n    width: 256pxx;\n    border: 1px solid ${palette.gray[9]};/*스타일 초기화*/\n    input,\n    button{\n    outline: none;\n    border:none;\n    font-size: 1rem;\n    }\n    \n    input{\n    padding:0.5rem;\n    flex: 1;\n    }\n    \n    button {\n    cursor: pointer;\n    padding-right: 1rem;\n    padding-left: 1rem;\n    border: none;\n    background: ${palette.gray[8]};\n    color:white;\n    font-weight: bold;\n    &:hover{\n    background: ${palette.gray[6]};\n    }\n}    \n`;\n\nconst Tag = styled.div`\n    margin-right: 0.5rem;\n    color: ${palette.gray[6]};\n    cursor: pointer;\n    &:hover {\n    opacity: 0.5;\n    }\n`;\n\nconst TagListBlock = styled.div`\n  display: flex;\n  margin-top: 0.5rem;\n`;\n\n//react.memo사용하여 tag값이 변경시에만 리렌러링\nconst TagItem = React.memo(({tag, onRemove}) => <Tag onClick={() => onRemove(tag)}>#{tag}</Tag>);\n\nconst TagList = React.memo(({tags, onRemove}) => {\n    <TagListBlock>\n        {tags.map(tag => (\n            <TagItem key={tag} tag={tag} onRemove={onRemove}/>\n        ))}\n    </TagListBlock>\n});\n\nconst TagBox = () => {\n    const [input, setInput] = useState('');\n    const [localTags, setLocalTags] = useState([]);\n\n    const insertTag = useCallback(\n        tag => {\n            if (!tag) return;\n            if (localTags.includes(tag)) return;//존재하는 경우 추가X\n            setLocalTags([...localTags, tag]);\n        },\n        [localTags],\n    );\n\n    return (\n        <TagBoxBlock>\n            <h4>태그</h4>\n            <TagForm>\n                <input placeholder={\"태그를 입력하세요\"}/>\n                <button type={\"submit\"}>추가</button>\n            </TagForm>\n            <TagList tags={['태그1', '태그2', '태그3']}/>\n        </TagBoxBlock>\n    )\n};\n\nexport default TagBox;"]},"metadata":{},"sourceType":"module"}