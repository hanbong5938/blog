{"ast":null,"code":"var _jsxFileName = \"/home/h/workspace/blog/blog-frontend/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { applyMiddleware, createStore } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport createSagaMiddleware from 'redux-saga';\nimport rootReducer, { rootSaga } from \"./modules\";\nimport { tempSetUser, check } from \"./modules/user\";\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(sagaMiddleware)));\n\nfunction loadUser() {\n  try {\n    const user = localStorage.getItem('user');\n    if (!user) return;\n    store.dispatch(tempSetUser(user));\n    store.dispatch(check());\n  } catch (e) {\n    console.log('localStorage is not working');\n  }\n}\n\nsagaMiddleware.run(rootSaga);\nloadUser();\nReactDOM.render(React.createElement(Provider, {\n  store: store,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33\n  },\n  __self: this\n}, React.createElement(BrowserRouter, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34\n  },\n  __self: this\n}, React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35\n  },\n  __self: this\n}))), document.getElementById('root'));\nserviceWorker.unregister();","map":{"version":3,"sources":["/home/h/workspace/blog/blog-frontend/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","BrowserRouter","Provider","applyMiddleware","createStore","composeWithDevTools","createSagaMiddleware","rootReducer","rootSaga","tempSetUser","check","sagaMiddleware","store","loadUser","user","localStorage","getItem","dispatch","e","console","log","run","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,SAAQC,aAAR,QAA4B,kBAA5B;AACA,SAAQC,QAAR,QAAuB,aAAvB;AACA,SAAQC,eAAR,EAAyBC,WAAzB,QAA2C,OAA3C;AACA,SAAQC,mBAAR,QAAkC,0BAAlC;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,WAAP,IAAqBC,QAArB,QAAoC,WAApC;AACA,SAAQC,WAAR,EAAqBC,KAArB,QAAiC,gBAAjC;AAEA,MAAMC,cAAc,GAAGL,oBAAoB,EAA3C;AACA,MAAMM,KAAK,GAAGR,WAAW,CAACG,WAAD,EAAcF,mBAAmB,CAACF,eAAe,CAACQ,cAAD,CAAhB,CAAjC,CAAzB;;AAEA,SAASE,QAAT,GAAoB;AAChB,MAAG;AACC,UAAMC,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAb;AACA,QAAG,CAACF,IAAJ,EAAU;AAEVF,IAAAA,KAAK,CAACK,QAAN,CAAeR,WAAW,CAACK,IAAD,CAA1B;AACAF,IAAAA,KAAK,CAACK,QAAN,CAAeP,KAAK,EAApB;AACH,GAND,CAMC,OAAOQ,CAAP,EAAU;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACH;AACJ;;AAEDT,cAAc,CAACU,GAAf,CAAmBb,QAAnB;AACAK,QAAQ;AAERf,QAAQ,CAACwB,MAAT,CACI,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEV,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,CADJ,CADJ,EAMIW,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CANJ;AASAxB,aAAa,CAACyB,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport {applyMiddleware, createStore} from \"redux\";\nimport {composeWithDevTools} from \"redux-devtools-extension\";\nimport createSagaMiddleware from 'redux-saga';\nimport rootReducer, {rootSaga} from \"./modules\";\nimport {tempSetUser, check} from \"./modules/user\";\n\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(sagaMiddleware)));\n\nfunction loadUser() {\n    try{\n        const user = localStorage.getItem('user');\n        if(!user) return;\n\n        store.dispatch(tempSetUser(user));\n        store.dispatch(check());\n    }catch (e) {\n        console.log('localStorage is not working');\n    }\n}\n\nsagaMiddleware.run(rootSaga);\nloadUser();\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter>\n            <App/>\n        </BrowserRouter>\n    </Provider>,\n    document.getElementById('root')\n);\n\nserviceWorker.unregister();"]},"metadata":{},"sourceType":"module"}